import * as cdk from 'aws-cdk-lib';
import * as ec2 from 'aws-cdk-lib/aws-ec2';
import { Construct } from 'constructs';
import * as directoryservice from 'aws-cdk-lib/aws-directoryservice';

export interface DirectoryServiceConstructProps {
  vpc: ec2.Vpc;
  privateSubnets: ec2.ISubnet[];
}

export class DirectoryServiceConstruct extends Construct {
  public readonly directoryService: directoryservice.CfnSimpleAD;

  constructor(scope: Construct, id: string, props: DirectoryServiceConstructProps) {
    super(scope, id);

    // åˆ›å»º Simple AD
    this.directoryService = new directoryservice.CfnSimpleAD(this, 'SimpleAD', {
      name: 'mydomain',
      password: 'YourSecurePassword123!',
      size: 'Small',
      vpcSettings: {
        vpcId: props.vpc.vpcId,
        subnetIds: props.privateSubnets.map(subnet => subnet.subnetId),
      },
    });
  }
}
